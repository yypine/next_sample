@use "mixins" as mix;
@use "variables" as vars;
@use "sass:map";
.prefectureList {
  margin: 0.5em 0 0;
  gap: 13px 2%;
  display: flex;
  flex-wrap: wrap;
  @include mix.media-max(md) {
    gap: 12px 2%;
  }
  @include mix.media-max(sm) {
    gap: 8px 2%;
  }
  // チェックボックスを隠してカスタムUIを作成
  input[type="checkbox"] {
    // デフォルトのチェックボックスを非表示にする
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 0;
    height: 0;
    margin: 0;
    padding: 0;
    border: none;
    outline: none;
  }

  // カスタムチェックボックスのスタイル
  .prefectureItem {
    position: relative;
    display: flex;
    align-items: flex-start;
    cursor: pointer;
    background-color: #{map.get(vars.$colors, white)};
    border-radius: 5px;
    transition: background-color 0.3s ease;
    width: 15%;
    text-align: center;
    justify-content: center;
    @include mix.media-max(md) {
      width: 32%;
    }
    @include mix.media-max(sm) {
      width: 48%;
    }
    &:hover {
      color: #{map.get(vars.$colors, white)};
      background-color: #{map.get(vars.$colors, accent)};
    }
    &::after {
      // 小さい三角形を右下に表示するためのスタイル
      content: "";
      position: absolute;
      right: 0;
      bottom: 0;
      width: 0;
      height: 0;
      border-style: solid;
      border-radius: 0 0 3px 0;
      border-width: 12px 12px 0 0; // 右下が90度の三角形
      border-color: transparent #{map.get(vars.$colors, accent)} transparent transparent;
    }
    span {
      padding: 0.3em 1em;
      width: 100%;
      height: 2em;
      display: flex;
      align-items: center;
      justify-content: center;
      @include mix.media-max(sm) {
        height: 2.75em;
      }
    }
    // チェックされた状態のスタイル
    input[type="checkbox"]:checked + span {
      background-color: #{map.get(vars.$colors, accent)};
      color: #{map.get(vars.$colors, white)};
    }
  }

  // チェックボックスのラベルスタイル
  .prefectureName {
    display: inline-block;
    padding: 0.5em;
    border-radius: 4px;
    font-weight: bold;
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
  }
  @include mix.media(sm) {
    //font-size: #{map-get(vars.$font-sizes, xxxl)};
  }
}
