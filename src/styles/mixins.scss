@use "variables" as vars;
// ブレークポイント定義
$breakpoints: (
  xs: 480px,
  sm: 768px,
  md: 1024px,
  lg: 1200px,
  xl: 1440px,
);

// メディアクエリミックスイン
@mixin media($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found in $breakpoints.";
  }
}

// Max-widthバージョン
@mixin media-max($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: (map-get($breakpoints, $breakpoint) - 1px)) {
      @content;
    }
  }
}

// 範囲指定バージョン
@mixin media-between($min, $max) {
  @if map-has-key($breakpoints, $min) and map-has-key($breakpoints, $max) {
    @media (min-width: map-get($breakpoints, $min)) and (max-width: (map-get($breakpoints, $max) - 1px)) {
      @content;
    }
  }
}

// カスタム値でのメディアクエリ
@mixin media-custom($min: null, $max: null) {
  @if $min and $max {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else if $max {
    @media (max-width: $max) {
      @content;
    }
  }
}

// ダークモードミックスイン
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// ライトモードミックスイン
@mixin light-mode {
  @media (prefers-color-scheme: light) {
    @content;
  }
}

// ホバー対応デバイスのみ
@mixin hover-device {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

// モーション許可ユーザーのみ
@mixin motion-ok {
  @media (prefers-reduced-motion: no-preference) {
    @content;
  }
}
